{"abi":[{"type":"function","name":"addRoute","inputs":[{"name":"verifier","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"freezeRoute","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"routes","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"verifier","type":"address","internalType":"address"},{"name":"frozen","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"verifyProof","inputs":[{"name":"programVKey","type":"bytes32","internalType":"bytes32"},{"name":"publicValues","type":"bytes","internalType":"bytes"},{"name":"proofBytes","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"view"},{"type":"event","name":"RouteAdded","inputs":[{"name":"selector","type":"bytes4","indexed":false,"internalType":"bytes4"},{"name":"verifier","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RouteFrozen","inputs":[{"name":"selector","type":"bytes4","indexed":false,"internalType":"bytes4"},{"name":"verifier","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"RouteAlreadyExists","inputs":[{"name":"verifier","type":"address","internalType":"address"}]},{"type":"error","name":"RouteIsFrozen","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"}]},{"type":"error","name":"RouteNotFound","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"}]},{"type":"error","name":"SelectorCannotBeZero","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addRoute(address)":"8c95ff1e","freezeRoute(bytes4)":"814856f4","routes(bytes4)":"51c7094f","verifyProof(bytes32,bytes,bytes)":"41493c60"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"RouteAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"RouteIsFrozen\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"RouteNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SelectorCannotBeZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"RouteAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"RouteFrozen\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"addRoute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"freezeRoute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"routes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"frozen\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"programVKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"publicValues\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"proofBytes\",\"type\":\"bytes\"}],\"name\":\"verifyProof\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Succinct Labs\",\"errors\":{\"RouteAlreadyExists(address)\":[{\"params\":{\"verifier\":\"The address of the verifier contract in the existing route.\"}}],\"RouteIsFrozen(bytes4)\":[{\"params\":{\"selector\":\"The verifier selector that was specified.\"}}],\"RouteNotFound(bytes4)\":[{\"params\":{\"selector\":\"The verifier selector that was specified.\"}}]},\"events\":{\"RouteAdded(bytes4,address)\":{\"params\":{\"selector\":\"The verifier selector that was added.\",\"verifier\":\"The address of the verifier contract.\"}},\"RouteFrozen(bytes4,address)\":{\"params\":{\"selector\":\"The verifier selector that was frozen.\",\"verifier\":\"The address of the verifier contract.\"}}},\"kind\":\"dev\",\"methods\":{\"addRoute(address)\":{\"details\":\"Only callable by the owner. The owner is responsible for ensuring that the specified verifier is correct with a valid VERIFIER_HASH. Once a route to a verifier is added, it cannot be removed.\",\"params\":{\"verifier\":\"The address of the verifier contract. This verifier MUST implement the ISP1VerifierWithHash interface.\"}},\"freezeRoute(bytes4)\":{\"details\":\"Only callable by the owner. Once a route to a verifier is frozen, it cannot be unfrozen.\",\"params\":{\"selector\":\"The verifier selector to freeze.\"}},\"routes(bytes4)\":{\"details\":\"Only one verifier route can be added for each selector.\",\"params\":{\"selector\":\"The verifier selector, which is both the first 4 bytes of the VERIFIER_HASH and the first 4 bytes of the proofs designed for that verifier.\"},\"returns\":{\"frozen\":\"Whether the verifier is frozen.\",\"verifier\":\"The address of the verifier contract.\"}},\"verifyProof(bytes32,bytes,bytes)\":{\"details\":\"It is expected that the first 4 bytes of proofBytes must match the first 4 bytes of target verifier's VERIFIER_HASH.\",\"params\":{\"programVKey\":\"The verification key for the RISC-V program.\",\"proofBytes\":\"The proof of the program execution the SP1 zkVM encoded as bytes.\",\"publicValues\":\"The public values encoded as bytes.\"}}},\"title\":\"SP1 Verifier Gateway Interface\",\"version\":1},\"userdoc\":{\"errors\":{\"RouteAlreadyExists(address)\":[{\"notice\":\"Thrown when adding a verifier route and the selector already contains a route.\"}],\"RouteIsFrozen(bytes4)\":[{\"notice\":\"Thrown when the verifier route is found, but is frozen.\"}],\"RouteNotFound(bytes4)\":[{\"notice\":\"Thrown when the verifier route is not found.\"}],\"SelectorCannotBeZero()\":[{\"notice\":\"Thrown when adding a verifier route and the selector returned by the verifier is zero.\"}]},\"events\":{\"RouteAdded(bytes4,address)\":{\"notice\":\"Emitted when a verifier route is added.\"},\"RouteFrozen(bytes4,address)\":{\"notice\":\"Emitted when a verifier route is frozen.\"}},\"kind\":\"user\",\"methods\":{\"addRoute(address)\":{\"notice\":\"Adds a verifier route. This enable proofs to be routed to this verifier.\"},\"freezeRoute(bytes4)\":{\"notice\":\"Freezes a verifier route. This prevents proofs from being routed to this verifier.\"},\"routes(bytes4)\":{\"notice\":\"Mapping of 4-byte verifier selectors to verifier routes.\"},\"verifyProof(bytes32,bytes,bytes)\":{\"notice\":\"Verifies a proof with given public values and vkey.\"}},\"notice\":\"This contract is the interface for the SP1 Verifier Gateway.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/sp1-contracts/contracts/src/ISP1VerifierGateway.sol\":\"ISP1VerifierGateway\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sp1-contracts/=lib/sp1-contracts/\"]},\"sources\":{\"lib/sp1-contracts/contracts/src/ISP1Verifier.sol\":{\"keccak256\":\"0x9e3ba64860bea920772dcf16be7946de2a2900d80bd51e9c0771184138f4f4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ec7230ca1fdd74edc6ab597d80bb345282aed3f0db4788ed96b4cc373ff46a3\",\"dweb:/ipfs/QmXPuSS5gzxMhFKWr1gsxBVu6WHh53ZZEvWkGgzrkM6Y7Q\"]},\"lib/sp1-contracts/contracts/src/ISP1VerifierGateway.sol\":{\"keccak256\":\"0x881e35201ae03dd1da7a8b52d89f493ce18a1135ec5b2f1879bba2d07086da79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54bd462f7ff4b19c86a06645cfa7221ec1c2665f58a86bc8fbccb0067df95dfd\",\"dweb:/ipfs/QmW1Sff3J7AbYPPcM8MnQYPkpwCgNFDzNPF5PBWNyi5sPP\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"verifier","type":"address"}],"type":"error","name":"RouteAlreadyExists"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"type":"error","name":"RouteIsFrozen"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"type":"error","name":"RouteNotFound"},{"inputs":[],"type":"error","name":"SelectorCannotBeZero"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4","indexed":false},{"internalType":"address","name":"verifier","type":"address","indexed":false}],"type":"event","name":"RouteAdded","anonymous":false},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4","indexed":false},{"internalType":"address","name":"verifier","type":"address","indexed":false}],"type":"event","name":"RouteFrozen","anonymous":false},{"inputs":[{"internalType":"address","name":"verifier","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addRoute"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"freezeRoute"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"stateMutability":"view","type":"function","name":"routes","outputs":[{"internalType":"address","name":"verifier","type":"address"},{"internalType":"bool","name":"frozen","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"programVKey","type":"bytes32"},{"internalType":"bytes","name":"publicValues","type":"bytes"},{"internalType":"bytes","name":"proofBytes","type":"bytes"}],"stateMutability":"view","type":"function","name":"verifyProof"}],"devdoc":{"kind":"dev","methods":{"addRoute(address)":{"details":"Only callable by the owner. The owner is responsible for ensuring that the specified verifier is correct with a valid VERIFIER_HASH. Once a route to a verifier is added, it cannot be removed.","params":{"verifier":"The address of the verifier contract. This verifier MUST implement the ISP1VerifierWithHash interface."}},"freezeRoute(bytes4)":{"details":"Only callable by the owner. Once a route to a verifier is frozen, it cannot be unfrozen.","params":{"selector":"The verifier selector to freeze."}},"routes(bytes4)":{"details":"Only one verifier route can be added for each selector.","params":{"selector":"The verifier selector, which is both the first 4 bytes of the VERIFIER_HASH and the first 4 bytes of the proofs designed for that verifier."},"returns":{"frozen":"Whether the verifier is frozen.","verifier":"The address of the verifier contract."}},"verifyProof(bytes32,bytes,bytes)":{"details":"It is expected that the first 4 bytes of proofBytes must match the first 4 bytes of target verifier's VERIFIER_HASH.","params":{"programVKey":"The verification key for the RISC-V program.","proofBytes":"The proof of the program execution the SP1 zkVM encoded as bytes.","publicValues":"The public values encoded as bytes."}}},"version":1},"userdoc":{"kind":"user","methods":{"addRoute(address)":{"notice":"Adds a verifier route. This enable proofs to be routed to this verifier."},"freezeRoute(bytes4)":{"notice":"Freezes a verifier route. This prevents proofs from being routed to this verifier."},"routes(bytes4)":{"notice":"Mapping of 4-byte verifier selectors to verifier routes."},"verifyProof(bytes32,bytes,bytes)":{"notice":"Verifies a proof with given public values and vkey."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","sp1-contracts/=lib/sp1-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/sp1-contracts/contracts/src/ISP1VerifierGateway.sol":"ISP1VerifierGateway"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/sp1-contracts/contracts/src/ISP1Verifier.sol":{"keccak256":"0x9e3ba64860bea920772dcf16be7946de2a2900d80bd51e9c0771184138f4f4d3","urls":["bzz-raw://0ec7230ca1fdd74edc6ab597d80bb345282aed3f0db4788ed96b4cc373ff46a3","dweb:/ipfs/QmXPuSS5gzxMhFKWr1gsxBVu6WHh53ZZEvWkGgzrkM6Y7Q"],"license":"MIT"},"lib/sp1-contracts/contracts/src/ISP1VerifierGateway.sol":{"keccak256":"0x881e35201ae03dd1da7a8b52d89f493ce18a1135ec5b2f1879bba2d07086da79","urls":["bzz-raw://54bd462f7ff4b19c86a06645cfa7221ec1c2665f58a86bc8fbccb0067df95dfd","dweb:/ipfs/QmW1Sff3J7AbYPPcM8MnQYPkpwCgNFDzNPF5PBWNyi5sPP"],"license":"MIT"}},"version":1},"id":27}